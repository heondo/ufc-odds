{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/client/container/upcoming-season-item.jsx","webpack:///./src/client/container/loading-circle.jsx","webpack:///./src/client/components/upcoming-seasons.jsx","webpack:///./src/client/context/user-context.js","webpack:///./src/client/components/Dropdown/index.jsx","webpack:///./src/client/context/theme-context.js","webpack:///./src/client/container/fight-statistics.jsx","webpack:///./src/client/container/season-summary-item.jsx","webpack:///./src/client/components/season-page.jsx","webpack:///./src/client/container/header.jsx","webpack:///./src/client/components/signup.jsx","webpack:///./src/client/container/summary-predictions.jsx","webpack:///./src/client/container/accounts-summaries.jsx","webpack:///./src/client/components/account-page.jsx","webpack:///./src/client/components/login.jsx","webpack:///./src/client/container/summary-drag-item.jsx","webpack:///./src/client/components/edit-summaries.jsx","webpack:///./src/client/index.jsx","webpack:///./src/client/components/app.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","UpcomingSeasonItem","props","convertName","split","join","newArray","eventsArray","filter","f","match_status","SeasonItemContainer","onClick","history","SeasonName","replace","SeasonDate","moment","startDate","format","FiveRoundHeader","undefined","iProps","FighterNames","sport_event","competitors","Arrow","className","styled","div","propTypes","PropTypes","string","endDate","array","LoadingContainer","LoadingCircle","UpcomingSeasons","seasons","SeasonsListContainer","start_date","five_round_events","UserContext","createContext","Dropdown","colors","pCol0","pCol1","pCol2","pCol3","pCol4","s1Col0","s1Col1","s1Col2","s1Col3","s1Col4","s2Col0","s2Col1","s2Col2","s2Col3","s2Col4","moreLessOrEven","num1","num2","FightStatistics","FightStatsContainer","statsHidden","RoundStatistics","periods","fighterOneTotals","fighterTwoTotals","OpenStatistics","toggleStatsHidden","style","marginBottom","TableStatistics","statsObjectOne","statsObjectTwo","roundNumber","total","console","log","RoundLabel","RoundStatsTable","cellSpacing","StatNumber","more","StatType","stat","convertStat","Divider","RoundContainer","round","statistics","roundStatisticsOne","roundStatisticsTwo","number","td","bool","func","upper","newName","toUpperCase","VoteComponent","voteCount","margin","totalVotes","values","reduce","a","b","f1Votes","f2Votes","f1Percent","toFixed","f2Percent","VoteContainer","VoteDisplay","MobileDisappear","VoteBarContainer","direction","VoteCountBar","percent","moreThan","TotalVotesText","PredictOnFighter","selectedFighter","setSelectedFighter","useState","isDayBefore","DropdownContainer","onSelect","eventKey","Toggle","btnStyle","Menu","active","fighterOdds","submitPrediction","SeasonSummaryItem","isPredicting","setIsPredicting","setStatsHidden","user","useContext","weightClass","newString","match","convertWeightClass","convertDecision","decision","markets","plusMinusOdds","outcomes","probability","SummaryContainer","FightersContainer","canceled","winner","WinLossText","type","FighterName","VSContainer","WeightClass","scheduledRounds","winMethod","isDraw","finalRound","finalRoundTime","conditionalWinDescription","predictedFighter","UserPickedFighter","fighter","fighterIDtoName","odds","fighterIDtoOdds","correct","payout","betAmount","MiniLoading","async","fighterID","index","insertResponse","axios","post","seasonID","summaryID","success","addPredictionHandler","stage","err","error","totals","span","summaryOrder","predictionID","seasonDate","isCanceled","statusObject","status","SeasonPage","params","summaries","setSummaries","summariesCount","setSummariesCount","isEnded","setIsEnded","possibleStages","setUser","currentDate","Date","cacheDataToLocalStorage","time","lsName","localStorage","setItem","JSON","stringify","useEffect","getSeasonData","localData","parse","getItem","response","message","start_time","returnFighterWinnings","bet","winnerPercentage","winnerIndex","forEach","returnWinnerPercentage","calculateWinnings","percentage","percentToOdds","createVenueLocation","venue","newSummaries","votecount","update","prediction_id","$set","predicted_fighter","SummariesContainer","SeasonTitle","sport_event_context","season","userID","EditButton","to","country_name","ArenaName","UsersVotesResults","summariesArray","sport_event_status","winner_id","s_order","scheduled_length","weight_class","method","final_round","final_round_length","flattenedObjectSummaries","firstFight","StageText","TotalPredictions","stats","summArray","correctPredictions","totalPredictions","totalFights","winningAmount","totalMoneyIn","fight","iteratePredictions","OddsResultsContainer","nonCanceledFightLength","sum","realWinnerID","maxWidth","cookies","Cookies","Header","menuVisible","setMenuVisible","HeaderContainer","LogoAndText","LogoContainer","DownArrow","AccountMenu","removeItem","remove","marginLeft","yup","ref","msg","test","exclusive","reference","path","this","validationSchema","shape","username","min","max","required","password","matches","confirmPassword","equalTo","SignUp","usernameTaken","setUsernameTaken","SignUpContainer","initialValues","validateOnChange","validateOnBlur","onSubmit","userSignupResponse","userData","submitUserData","FormContainer","onChange","InputContainer","InputField","placeholder","UsernameUnavailableError","ErrorOutput","component","SubmitButton","button","Field","ErrorMessage","Form","SummaryPredictions","FighterOne","competitorID","Middle","FighterTwo","Fighter","AccountsSummaries","SeasonsContainer","innerProps","sportEventStatus","sportEvent","AccountPage","predictionData","setPredictionData","fetchUserPredictions","predictionResponse","AccountContainer","AccountTitle","seasonsArray","passedFights","winnings","inputMoney","seasonsummaries","seasonSummaries","predictedPercentage","percentageChange","Login","loginFailed","setLoginFailed","LoginContainer","loginResponse","LoginFailError","ItemTypes","CanceledCheck","input","border","padding","backgroundColor","cursor","SummaryDragItem","React","forwardRef","editFightCancel","isDragging","connectDragSource","connectDropTarget","elementRef","useRef","opacity","useImperativeHandle","getNode","current","checked","DropTarget","hover","monitor","node","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","connect","dropTarget","DragSource","beginDrag","dragSource","SubmitChanges","CanceledHeader","EditSummaries","isSubmitting","setIsSubmitting","handleSubmitChanges","axiosBody","newOrder","sportEventID","sortOrder","currentCancelValue","startTime","nowTime","dragCard","$splice","DndProvider","backend","HTML5Backend","ReactDOM","render","setSeasons","getSeasons","userProviderVal","useMemo","Provider","exact","document","getElementById"],"mappings":"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UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IA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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([454,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./af\": 103,\n\t\"./af.js\": 103,\n\t\"./ar\": 104,\n\t\"./ar-dz\": 105,\n\t\"./ar-dz.js\": 105,\n\t\"./ar-kw\": 106,\n\t\"./ar-kw.js\": 106,\n\t\"./ar-ly\": 107,\n\t\"./ar-ly.js\": 107,\n\t\"./ar-ma\": 108,\n\t\"./ar-ma.js\": 108,\n\t\"./ar-sa\": 109,\n\t\"./ar-sa.js\": 109,\n\t\"./ar-tn\": 110,\n\t\"./ar-tn.js\": 110,\n\t\"./ar.js\": 104,\n\t\"./az\": 111,\n\t\"./az.js\": 111,\n\t\"./be\": 112,\n\t\"./be.js\": 112,\n\t\"./bg\": 113,\n\t\"./bg.js\": 113,\n\t\"./bm\": 114,\n\t\"./bm.js\": 114,\n\t\"./bn\": 115,\n\t\"./bn.js\": 115,\n\t\"./bo\": 116,\n\t\"./bo.js\": 116,\n\t\"./br\": 117,\n\t\"./br.js\": 117,\n\t\"./bs\": 118,\n\t\"./bs.js\": 118,\n\t\"./ca\": 119,\n\t\"./ca.js\": 119,\n\t\"./cs\": 120,\n\t\"./cs.js\": 120,\n\t\"./cv\": 121,\n\t\"./cv.js\": 121,\n\t\"./cy\": 122,\n\t\"./cy.js\": 122,\n\t\"./da\": 123,\n\t\"./da.js\": 123,\n\t\"./de\": 124,\n\t\"./de-at\": 125,\n\t\"./de-at.js\": 125,\n\t\"./de-ch\": 126,\n\t\"./de-ch.js\": 126,\n\t\"./de.js\": 124,\n\t\"./dv\": 127,\n\t\"./dv.js\": 127,\n\t\"./el\": 128,\n\t\"./el.js\": 128,\n\t\"./en-SG\": 129,\n\t\"./en-SG.js\": 129,\n\t\"./en-au\": 130,\n\t\"./en-au.js\": 130,\n\t\"./en-ca\": 131,\n\t\"./en-ca.js\": 131,\n\t\"./en-gb\": 132,\n\t\"./en-gb.js\": 132,\n\t\"./en-ie\": 133,\n\t\"./en-ie.js\": 133,\n\t\"./en-il\": 134,\n\t\"./en-il.js\": 134,\n\t\"./en-nz\": 135,\n\t\"./en-nz.js\": 135,\n\t\"./eo\": 136,\n\t\"./eo.js\": 136,\n\t\"./es\": 137,\n\t\"./es-do\": 138,\n\t\"./es-do.js\": 138,\n\t\"./es-us\": 139,\n\t\"./es-us.js\": 139,\n\t\"./es.js\": 137,\n\t\"./et\": 140,\n\t\"./et.js\": 140,\n\t\"./eu\": 141,\n\t\"./eu.js\": 141,\n\t\"./fa\": 142,\n\t\"./fa.js\": 142,\n\t\"./fi\": 143,\n\t\"./fi.js\": 143,\n\t\"./fo\": 144,\n\t\"./fo.js\": 144,\n\t\"./fr\": 145,\n\t\"./fr-ca\": 146,\n\t\"./fr-ca.js\": 146,\n\t\"./fr-ch\": 147,\n\t\"./fr-ch.js\": 147,\n\t\"./fr.js\": 145,\n\t\"./fy\": 148,\n\t\"./fy.js\": 148,\n\t\"./ga\": 149,\n\t\"./ga.js\": 149,\n\t\"./gd\": 150,\n\t\"./gd.js\": 150,\n\t\"./gl\": 151,\n\t\"./gl.js\": 151,\n\t\"./gom-latn\": 152,\n\t\"./gom-latn.js\": 152,\n\t\"./gu\": 153,\n\t\"./gu.js\": 153,\n\t\"./he\": 154,\n\t\"./he.js\": 154,\n\t\"./hi\": 155,\n\t\"./hi.js\": 155,\n\t\"./hr\": 156,\n\t\"./hr.js\": 156,\n\t\"./hu\": 157,\n\t\"./hu.js\": 157,\n\t\"./hy-am\": 158,\n\t\"./hy-am.js\": 158,\n\t\"./id\": 159,\n\t\"./id.js\": 159,\n\t\"./is\": 160,\n\t\"./is.js\": 160,\n\t\"./it\": 161,\n\t\"./it-ch\": 162,\n\t\"./it-ch.js\": 162,\n\t\"./it.js\": 161,\n\t\"./ja\": 163,\n\t\"./ja.js\": 163,\n\t\"./jv\": 164,\n\t\"./jv.js\": 164,\n\t\"./ka\": 165,\n\t\"./ka.js\": 165,\n\t\"./kk\": 166,\n\t\"./kk.js\": 166,\n\t\"./km\": 167,\n\t\"./km.js\": 167,\n\t\"./kn\": 168,\n\t\"./kn.js\": 168,\n\t\"./ko\": 169,\n\t\"./ko.js\": 169,\n\t\"./ku\": 170,\n\t\"./ku.js\": 170,\n\t\"./ky\": 171,\n\t\"./ky.js\": 171,\n\t\"./lb\": 172,\n\t\"./lb.js\": 172,\n\t\"./lo\": 173,\n\t\"./lo.js\": 173,\n\t\"./lt\": 174,\n\t\"./lt.js\": 174,\n\t\"./lv\": 175,\n\t\"./lv.js\": 175,\n\t\"./me\": 176,\n\t\"./me.js\": 176,\n\t\"./mi\": 177,\n\t\"./mi.js\": 177,\n\t\"./mk\": 178,\n\t\"./mk.js\": 178,\n\t\"./ml\": 179,\n\t\"./ml.js\": 179,\n\t\"./mn\": 180,\n\t\"./mn.js\": 180,\n\t\"./mr\": 181,\n\t\"./mr.js\": 181,\n\t\"./ms\": 182,\n\t\"./ms-my\": 183,\n\t\"./ms-my.js\": 183,\n\t\"./ms.js\": 182,\n\t\"./mt\": 184,\n\t\"./mt.js\": 184,\n\t\"./my\": 185,\n\t\"./my.js\": 185,\n\t\"./nb\": 186,\n\t\"./nb.js\": 186,\n\t\"./ne\": 187,\n\t\"./ne.js\": 187,\n\t\"./nl\": 188,\n\t\"./nl-be\": 189,\n\t\"./nl-be.js\": 189,\n\t\"./nl.js\": 188,\n\t\"./nn\": 190,\n\t\"./nn.js\": 190,\n\t\"./pa-in\": 191,\n\t\"./pa-in.js\": 191,\n\t\"./pl\": 192,\n\t\"./pl.js\": 192,\n\t\"./pt\": 193,\n\t\"./pt-br\": 194,\n\t\"./pt-br.js\": 194,\n\t\"./pt.js\": 193,\n\t\"./ro\": 195,\n\t\"./ro.js\": 195,\n\t\"./ru\": 196,\n\t\"./ru.js\": 196,\n\t\"./sd\": 197,\n\t\"./sd.js\": 197,\n\t\"./se\": 198,\n\t\"./se.js\": 198,\n\t\"./si\": 199,\n\t\"./si.js\": 199,\n\t\"./sk\": 200,\n\t\"./sk.js\": 200,\n\t\"./sl\": 201,\n\t\"./sl.js\": 201,\n\t\"./sq\": 202,\n\t\"./sq.js\": 202,\n\t\"./sr\": 203,\n\t\"./sr-cyrl\": 204,\n\t\"./sr-cyrl.js\": 204,\n\t\"./sr.js\": 203,\n\t\"./ss\": 205,\n\t\"./ss.js\": 205,\n\t\"./sv\": 206,\n\t\"./sv.js\": 206,\n\t\"./sw\": 207,\n\t\"./sw.js\": 207,\n\t\"./ta\": 208,\n\t\"./ta.js\": 208,\n\t\"./te\": 209,\n\t\"./te.js\": 209,\n\t\"./tet\": 210,\n\t\"./tet.js\": 210,\n\t\"./tg\": 211,\n\t\"./tg.js\": 211,\n\t\"./th\": 212,\n\t\"./th.js\": 212,\n\t\"./tl-ph\": 213,\n\t\"./tl-ph.js\": 213,\n\t\"./tlh\": 214,\n\t\"./tlh.js\": 214,\n\t\"./tr\": 215,\n\t\"./tr.js\": 215,\n\t\"./tzl\": 216,\n\t\"./tzl.js\": 216,\n\t\"./tzm\": 217,\n\t\"./tzm-latn\": 218,\n\t\"./tzm-latn.js\": 218,\n\t\"./tzm.js\": 217,\n\t\"./ug-cn\": 219,\n\t\"./ug-cn.js\": 219,\n\t\"./uk\": 220,\n\t\"./uk.js\": 220,\n\t\"./ur\": 221,\n\t\"./ur.js\": 221,\n\t\"./uz\": 222,\n\t\"./uz-latn\": 223,\n\t\"./uz-latn.js\": 223,\n\t\"./uz.js\": 222,\n\t\"./vi\": 224,\n\t\"./vi.js\": 224,\n\t\"./x-pseudo\": 225,\n\t\"./x-pseudo.js\": 225,\n\t\"./yo\": 226,\n\t\"./yo.js\": 226,\n\t\"./zh-cn\": 227,\n\t\"./zh-cn.js\": 227,\n\t\"./zh-hk\": 228,\n\t\"./zh-hk.js\": 228,\n\t\"./zh-tw\": 229,\n\t\"./zh-tw.js\": 229\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 307;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nexport default function UpcomingSeasonItem(props) {\r\n  const convertName = name => {\r\n    const split = name.split(', ');\r\n    return [split[1], split[0]].join(' ');\r\n  };\r\n\r\n  const Fights = (iProps) => {\r\n    return (\r\n      <div>\r\n        {iProps.eventsArray.map(e => {\r\n          return (\r\n            <FighterNames key={e.id}>\r\n              {convertName(e.sport_event.competitors[0].name)} vs {convertName(e.sport_event.competitors[1].name)}\r\n            </FighterNames>);\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const newArray = props.eventsArray.filter(f => f.match_status !== 'cancelled');\r\n\r\n  return (\r\n    <SeasonItemContainer onClick={() => props.history.push(`/season/${props.id}`)}>\r\n      <SeasonName>{props.name.replace(/\\d{4}\\s*$/, '')}</SeasonName>\r\n      <SeasonDate>{moment(props.startDate).format('MMM Do, YYYY')}</SeasonDate>\r\n      {\r\n        newArray.length ? <FiveRoundHeader>{newArray.length === 1 ? \"Main Event\" : \"5 Round Fights\"}</FiveRoundHeader> : undefined\r\n      }\r\n      <Fights eventsArray={newArray}/>\r\n      <Arrow><i className=\"fas fa-caret-right\"></i></Arrow>\r\n    </SeasonItemContainer>\r\n  );\r\n}\r\n\r\nconst Arrow = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n`;\r\n\r\nconst SeasonName = styled.div`\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FiveRoundHeader = styled.div`\r\n  font-size: .85em;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SeasonDate = styled.div`\r\n  font-size: .95em;\r\n  font-style: italic;\r\n`;\r\n\r\nconst SeasonItemContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: .3rem;\r\n  border: 1px solid #4d4d4d;\r\n  box-shadow: 2px 2px 3px #7A7A7A;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  margin: .2rem 0;\r\n  position: relative;\r\n`;\r\n\r\nconst FighterNames = styled.div`\r\n  font-size: .9em;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nUpcomingSeasonItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  startDate: PropTypes.string,\r\n  endDate: PropTypes.string,\r\n  eventsArray: PropTypes.array\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst LoadingContainer = styled.div`\r\n  border: 8px solid #f3f3f3; /* Light grey */\r\n  border-top: 8px solid #3498db; /* Blue */\r\n  border-radius: 50%;\r\n  width: 80px;\r\n  height: 80px;\r\n  margin: 4rem auto;\r\n  animation: spin 2s linear infinite;\r\n`;\r\n\r\nexport default function LoadingCircle(props){\r\n  return <LoadingContainer />;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport UpcomingSeasonItem from '../container/upcoming-season-item';\r\nimport LoadingCircle from '../container/loading-circle';\r\n\r\nexport default function UpcomingSeasons(props) {\r\n  const {seasons} = props;\r\n\r\n  // const sortEvents = arr => {\r\n  //   const sorted = arr.sort((a, b) => (a.sport_event.start_time) < (b.sport_event.start_time) ? -1 : 1);\r\n  //   return sorted;\r\n  // };\r\n\r\n  return seasons ? (\r\n    <SeasonsListContainer>\r\n      {seasons.map(s => (\r\n        <UpcomingSeasonItem\r\n          {...props}\r\n          key={s.id}\r\n          id={s.id}\r\n          name={s.name}\r\n          startDate={s.start_date}\r\n          eventsArray={s.five_round_events || []}\r\n        />\r\n      ))}\r\n    </SeasonsListContainer>\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n}\r\n\r\nconst SeasonsListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  max-width: 576px;\r\n  padding: .5rem;\r\n`;\r\n","import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n","import '@trendmicro/react-dropdown/dist/react-dropdown.css';\r\nimport Dropdown from '@trendmicro/react-dropdown';\r\nimport '../Buttons'; // Ensure CSS dependency\r\n\r\nexport default Dropdown;\r\nexport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownMenuWrapper,\r\n  MenuItem,\r\n  DropdownButton\r\n} from '@trendmicro/react-dropdown';\r\n","// import {createContext} from 'react';\r\n\r\nconst colorObj = {\r\n  pCol0: \"#AA3939\", \t/* Main Primary color */\r\n  pCol1: \"#FFAAAA\",\r\n  pCol2: \"#D46A6A\",\r\n  pCol3: \"#801515\",\r\n  pCol4: \"#550000\",\r\n  s1Col0: \"#226666\",\r\n  s1Col1: \"#669999\",\r\n  s1Col2: \"#407F7F\",\r\n  s1Col3: \"#0D4D4D\",\r\n  s1Col4: \"#003333\",\r\n  s2Col0: \"#7B9F35\",\r\n  s2Col1: \"#D4EE9F\",\r\n  s2Col2: \"#A5C663\",\r\n  s2Col3: \"#567714\",\r\n  s2Col4: \"#354F00\"\r\n};\r\n\r\n\r\n// export const ThemeContext = createContext(colorObj);\r\nexport const colors = colorObj;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport {colors} from '../context/theme-context';\r\n\r\nconst moreLessOrEven = (num1, num2) => {\r\n  if (num1 === num2) {\r\n    return 'even';\r\n  }\r\n  if (num1 > num2) {\r\n    return 'more';\r\n  }\r\n  return 'less';\r\n};\r\n\r\nconst convertStat = stat => {\r\n  switch(stat){\r\n  case 'knockdowns':\r\n    return 'Knockdowns';\r\n  case 'total_strikes_attempted':\r\n    return 'Total Strikes ATT';\r\n  case 'total_strikes':\r\n    return 'Total Strikes';\r\n  case 'significant_strikes_attempted':\r\n    return 'Significant Strikes ATT';\r\n  case 'significant_strikes':\r\n    return 'Significant Strikes';\r\n  case 'takedowns_attempted':\r\n    return 'Takedowns ATT';\r\n  case 'takedowns':\r\n    return 'Takedowns';\r\n  case 'submission_attempts':\r\n    return 'Submission ATTs';\r\n  case 'total_strike_percentage':\r\n    return 'Total Strike %';\r\n  case 'significant_strike_percentage':\r\n    return 'Significant Strike %';\r\n  case 'takedown_percentage':\r\n    return 'Takedown %';\r\n  default:\r\n    return stat;\r\n  }\r\n};\r\n\r\nexport default function FightStatistics(props){\r\n  return (\r\n    <FightStatsContainer>\r\n      {\r\n        props.statsHidden ? null : (\r\n          <RoundStatistics periods={props.periods} fighterOneTotals={props.fighterOneTotals} fighterTwoTotals={props.fighterTwoTotals}/>\r\n        )\r\n      }\r\n      {props.statsHidden ? (\r\n        <OpenStatistics onClick={props.toggleStatsHidden}>\r\n          <span>\r\n            <div>\r\n              Statistics\r\n            </div>\r\n            <div>\r\n              <i style={{marginBottom: '.25rem'}}className=\"fas fa-sort-down\" />\r\n            </div>\r\n          </span>\r\n        </OpenStatistics>\r\n      ) : (\r\n        <OpenStatistics onClick={props.toggleStatsHidden}>\r\n          <span>\r\n            <div>\r\n                Statistics\r\n            </div>\r\n            <div>\r\n              <i className=\"fas fa-sort-up\" />\r\n            </div>\r\n          </span>\r\n        </OpenStatistics>\r\n      )\r\n      }\r\n    </FightStatsContainer>\r\n  );\r\n}\r\n\r\nconst TableStatistics = ({ statsObjectOne, statsObjectTwo, roundNumber, total}) => {\r\n  const keys = Object.keys(statsObjectOne);\r\n  console.log(keys);\r\n  return (\r\n    <div>\r\n      <RoundLabel>\r\n        {!total ? \"ROUND\" : null} {roundNumber}\r\n      </RoundLabel>\r\n      <RoundStatsTable>\r\n        <table cellSpacing=\"0\">\r\n          <tbody>\r\n            {\r\n              keys.map(key => (\r\n                <tr>\r\n                  <StatNumber more={moreLessOrEven(statsObjectOne[key], statsObjectTwo[key])}>\r\n                    {statsObjectOne[key]}\r\n                  </StatNumber>\r\n                  <StatType>\r\n                    {convertStat(key)}\r\n                  </StatType>\r\n                  <StatNumber more={moreLessOrEven(statsObjectTwo[key], statsObjectOne[key])}>\r\n                    {statsObjectTwo[key]}\r\n                  </StatNumber>\r\n                </tr>\r\n              ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </RoundStatsTable>\r\n      {\r\n        total ? null : <Divider />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst RoundStatistics = props => {\r\n\r\n  return (\r\n    <RoundContainer>\r\n      {\r\n        props.periods.map(round => {\r\n          const { statistics: roundStatisticsOne } = round.competitors[0];\r\n          const { statistics: roundStatisticsTwo } = round.competitors[1];\r\n          return (\r\n            <TableStatistics key={round.number} roundNumber={round.number} statsObjectOne={roundStatisticsOne} statsObjectTwo={roundStatisticsTwo} total={false}/>\r\n          );\r\n        })\r\n      }\r\n      <TableStatistics key=\"totalStats\" roundNumber=\"Totals\" statsObjectOne={props.fighterOneTotals} statsObjectTwo={props.fighterTwoTotals} total={true}/>\r\n    </RoundContainer>\r\n  );\r\n};\r\n\r\nconst OpenStatistics = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: .3rem auto;\r\n  /* background-color: white; */\r\n  span {\r\n    display: flex;\r\n    background-color: #DCDCDC;\r\n    color: black;\r\n    border-radius: 3px;\r\n    padding: .3rem .6rem;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #BDBDBD;\r\n    };\r\n    transition: all .2s ease;\r\n    div:first-child {\r\n      margin-right: .5rem;\r\n    };\r\n    padding: .3rem auto;\r\n  };\r\n`;\r\n\r\nconst RoundContainer = styled.div`\r\n  background-color: #BDBDBD;\r\n  color: black;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst StatNumber = styled.td`\r\n  font-size: .92rem;\r\n  color: ${props => props.more === 'even' ? '#202020' : props.more === 'more' ? colors.s2Col4 : colors.pCol0 };\r\n  font-weight: 700;\r\n`;\r\n\r\nconst RoundLabel = styled.div`\r\n  font-size: 1.03rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StatType = styled.td`\r\n  width: 13rem;\r\n`;\r\n\r\nconst RoundStatsTable = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  tr {\r\n    text-decoration: none !important;\r\n    td {\r\n      border-bottom: 1px solid black;\r\n    }\r\n  }\r\n  tbody {\r\n    tr:last-child {\r\n      td {\r\n        border-bottom: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  border-bottom: 2px solid grey;\r\n  margin: .3rem auto;\r\n`;\r\n\r\n// TODO: make the stats transition when you hide or unhide the section. Bug happening here....\r\n\r\nconst FightStatsContainer = styled.div`\r\n\r\n`;\r\n\r\nFightStatistics.propTypes = {\r\n  periods: PropTypes.array,\r\n  fighterOneTotals: PropTypes.object,\r\n  fighterTwoTotals: PropTypes.object,\r\n  statsHidden: PropTypes.bool,\r\n  toggleStatsHidden: PropTypes.func\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { UserContext } from '../context/user-context';\r\nimport axios from 'axios';\r\nimport Dropdown, {MenuItem} from '../components/Dropdown';\r\nimport { Button, ButtonGroup, ButtonToolbar } from '../components/Buttons';\r\nimport FightStatistics from './fight-statistics';\r\nimport LoadingCircle from './loading-circle';\r\nimport {colors} from '../context/theme-context';\r\n\r\nconst convertWeightClass = weightClass => {\r\n  const charsOnly = weightClass.match(/[a-z_]+/)[0];\r\n  let newString;\r\n  switch (charsOnly) {\r\n  case 'bantamweight':\r\n    newString = ['Bantamweight', '135 lbs'];\r\n    break;\r\n  case 'featherweight':\r\n    newString = ['Featherweight', '145 lbs'];\r\n    break;\r\n  case 'lightweight':\r\n    newString = ['Lightweight', '155 lbs'];\r\n    break;\r\n  case 'welterweight':\r\n    newString = ['Welterweight', '170 lbs'];\r\n    break;\r\n  case 'light_heavyweight':\r\n    newString = ['Light Heavyweight', '205 lbs'];\r\n    break;\r\n  case 'middleweight':\r\n    newString = ['Middleweight', '185 lbs'];\r\n    break;\r\n  case 'heavyweight':\r\n    newString = ['Heavyweight', '265 lbs'];\r\n    break;\r\n  case 'flyweight':\r\n    newString = ['Flyweight', '125 lbs'];\r\n    break;\r\n  case 'strawweight':\r\n    newString = ['Strawweight', '115 lbs'];\r\n    break;\r\n  }\r\n  return newString;\r\n};\r\n\r\nconst fighterIDtoName = (fighter, competitors) => {\r\n  for (let i of competitors) {\r\n    if (i.id === fighter) {\r\n      return convertName(i.name);\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst convertName = (name, upper) => {\r\n  const split = name.split(', ');\r\n  const newName = [split[1], split[0]].join(' ');\r\n  return upper ? newName.toUpperCase() : newName;\r\n};\r\n\r\nconst VoteComponent = props => {\r\n  if (!props.voteCount) {\r\n    return (\r\n      <div style={{\r\n        margin: '.3rem'\r\n      }}>\r\n        No votes\r\n      </div>\r\n    );\r\n  }\r\n  const totalVotes = Object.values(props.voteCount).reduce((a, b) => a + b) || 0;\r\n  const f1Votes = props.voteCount[props.competitors[0].id] || 0;\r\n  const f2Votes = props.voteCount[props.competitors[1].id] || 0;\r\n  const f1Percent = (f1Votes / totalVotes * 100).toFixed(0);\r\n  const f2Percent = (f2Votes / totalVotes * 100).toFixed(0);\r\n\r\n  return (\r\n    <VoteContainer>\r\n      <VoteDisplay>\r\n        <VoteDisplay>\r\n          <div>\r\n            {f1Percent}%\r\n            <MobileDisappear>({f1Votes}/{totalVotes})</MobileDisappear>\r\n          </div>\r\n        </VoteDisplay>\r\n        <VoteBarContainer direction=\"left\">\r\n          <VoteCountBar percent={f1Percent} moreThan={f1Votes > f2Votes} direction=\"left\" />\r\n        </VoteBarContainer>\r\n      </VoteDisplay>\r\n      <TotalVotesText>\r\n        Total Votes\r\n      </TotalVotesText>\r\n      <VoteDisplay>\r\n        <VoteBarContainer direction=\"right\">\r\n          <VoteCountBar percent={f2Percent} moreThan={f1Votes < f2Votes} direction=\"right\" />\r\n        </VoteBarContainer>\r\n        <VoteDisplay>\r\n          <div>\r\n            <MobileDisappear>({f2Votes}/{totalVotes})</MobileDisappear>\r\n            {f2Percent}%\r\n          </div>\r\n        </VoteDisplay>\r\n      </VoteDisplay>\r\n    </VoteContainer>\r\n  );\r\n};\r\n\r\nconst PredictOnFighter = props => {\r\n\r\n  const [selectedFighter, setSelectedFighter] = useState(null);\r\n\r\n  if (props.isDayBefore) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n    <DropdownContainer>\r\n      <Dropdown\r\n        onSelect={(eventKey) => {\r\n          setSelectedFighter(eventKey);\r\n        }}\r\n      >\r\n        <Dropdown.Toggle\r\n          btnStyle=\"flat\"\r\n        >\r\n          {selectedFighter !== null ? convertName(props.competitors[selectedFighter].name) : 'Predict on your fighter'}\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <MenuItem\r\n            eventKey={0}\r\n            active={selectedFighter === 0}\r\n          >\r\n            {convertName(props.competitors[0].name)} {props.fighterOdds ? props.fighterOdds[0] : null}\r\n          </MenuItem>\r\n          <MenuItem\r\n            eventKey={1}\r\n            active={selectedFighter === 1}\r\n          >\r\n            {convertName(props.competitors[1].name)} {props.fighterOdds ? props.fighterOdds[1] : null}\r\n          </MenuItem>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </DropdownContainer>\r\n      {\r\n        selectedFighter !== null ? (\r\n          <Button onClick={() => {\r\n            props.submitPrediction(selectedFighter);\r\n          }}>\r\n            Submit\r\n          </Button>\r\n        ) : null\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function SeasonSummaryItem(props){\r\n  const [isPredicting, setIsPredicting] = useState(false);\r\n  const [statsHidden, setStatsHidden] = useState(true);\r\n  const {user} = useContext(UserContext);\r\n\r\n  const weightClass = convertWeightClass(props.weightClass);\r\n\r\n  const submitPrediction = async index => {\r\n    setIsPredicting(true);\r\n    const fighterID = props.competitors[index].id;\r\n    // necessary things for the database. its own predictionID, summaryID, seasonsID, fighterID,\r\n    try {\r\n      const insertResponse = await axios.post('/api/summaries/predict', {\r\n        seasonID: props.seasonID,\r\n        summaryID: props.id,\r\n        fighterID: props.competitors[index].id\r\n      });\r\n      if (insertResponse.data.success) {\r\n        setIsPredicting(false);\r\n        props.addPredictionHandler(props.index, insertResponse.data.id, fighterID, props.stage);\r\n      }\r\n    }\r\n    catch (err) {\r\n      setIsPredicting(false);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const toggleStatsHidden = () => {\r\n    setStatsHidden(!statsHidden);\r\n  };\r\n\r\n\r\n  const fighterIDtoOdds = (id, competitors, odds) => {\r\n    for (let i in competitors){\r\n      if (id === competitors[i].id) {\r\n        return odds ? `(${odds[i]})` : null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const convertDecision = decision => {\r\n    switch (decision) {\r\n    case 'ko_tko':\r\n      return 'KO/TKO';\r\n    case 'tko_doctors_stoppage':\r\n      return 'TKO (Doctor Stoppage)';\r\n    case 'decision_unanimous':\r\n      return 'Unanimous Decision';\r\n    case 'decision_split':\r\n      return 'Split Decision';\r\n    case 'submission':\r\n      return 'Submission';\r\n    }\r\n  };\r\n\r\n  const Earnings = ({correct}) => {\r\n    return (\r\n      <div>\r\n        {correct ? `You earned $${(props.payout - props.betAmount).toFixed(2)}`:\r\n          `You lost your $${props.betAmount}`}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const fighterOdds = props.markets ? [\r\n    props.plusMinusOdds(props.markets[0].outcomes[0].probability),\r\n    props.plusMinusOdds(props.markets[0].outcomes[1].probability)\r\n  ] : null;\r\n\r\n  const conditionalWinDescription = (winMethod, finalRound, finalRoundTime) => {\r\n    switch (winMethod) {\r\n    case 'decision_split':\r\n    case 'decision_unanimous':\r\n      return `via ${convertDecision(winMethod)}`;\r\n    case 'tko_doctors_stoppage':\r\n    case 'ko_tko':\r\n    case 'submission':\r\n      return `via ${convertDecision(winMethod)} at ${finalRoundTime} of RD ${finalRound}`;\r\n    default:\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const WinnerDescription = () => {\r\n    return (\r\n      <div>\r\n        {props.isDraw ? \"Draw\" : null}\r\n        <div>\r\n          {conditionalWinDescription(props.winMethod, props.finalRound, props.finalRoundTime)}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SummaryContainer statsHidden={statsHidden}>\r\n      <FightersContainer canceled={props.canceled}>\r\n        <FighterNames direction=\"left\">\r\n          {\r\n            !props.winner ? null : props.winner === props.competitors[0].id ? (\r\n              <WinLossText type=\"W\">\r\n                W\r\n              </WinLossText>\r\n            ) : (\r\n              <WinLossText type=\"L\">\r\n                  L\r\n              </WinLossText>\r\n            )\r\n          }\r\n          <FighterName>\r\n            {convertName(props.competitors[0].name, true)}\r\n          </FighterName>\r\n        </FighterNames>\r\n        <VSContainer>\r\n          {' vs '}\r\n        </VSContainer>\r\n        <FighterNames direction=\"right\">\r\n          <FighterName>\r\n            {convertName(props.competitors[1].name, true)}\r\n          </FighterName>\r\n          {\r\n            !props.winner ? null : props.winner === props.competitors[1].id ? (\r\n              <WinLossText type=\"W\">\r\n                W\r\n              </WinLossText>\r\n            ) : (\r\n              <WinLossText type=\"L\">\r\n                L\r\n              </WinLossText>\r\n            )\r\n          }\r\n        </FighterNames>\r\n      </FightersContainer>\r\n      <WeightClass canceled={props.canceled}>\r\n        <div>\r\n          <em>{weightClass[0]}</em> - {weightClass[1]}\r\n        </div>\r\n        <div>\r\n          {props.scheduledRounds} Rounds\r\n        </div>\r\n      </WeightClass>\r\n      {\r\n        props.winner || props.winMethod ? (\r\n          <WinnerDescription />\r\n        ) : null\r\n      }\r\n      <VoteComponent voteCount={props.voteCount} competitors={props.competitors} />\r\n      {\r\n        props.predictedFighter ? (\r\n          <UserPickedFighter winner={props.winner} predictedFighter={props.predictedFighter}>\r\n            Your pick: {fighterIDtoName(props.predictedFighter, props.competitors)} {fighterIDtoOdds(props.predictedFighter, props.competitors, fighterOdds)}\r\n            {\r\n              props.finalRound && !props.canceled ? <Earnings correct={props.predictedFighter === props.winner} /> : null\r\n            }\r\n          </UserPickedFighter>\r\n        ) : isPredicting ? <MiniLoading />\r\n          : user ? (\r\n            <PredictOnFighter\r\n              isDayBefore={props.isDayBefore}\r\n              competitors={props.competitors}\r\n              submitPrediction={submitPrediction}\r\n              fighterOdds={fighterOdds}\r\n            />\r\n          ) : null\r\n      }\r\n      {\r\n        props.statistics ? (\r\n          <FightStatistics\r\n            periods={props.statistics.periods}\r\n            fighterOneTotals={props.statistics.totals.competitors[0].statistics}\r\n            fighterTwoTotals={props.statistics.totals.competitors[1].statistics}\r\n            toggleStatsHidden={toggleStatsHidden}\r\n            statsHidden={statsHidden}\r\n          />\r\n        ) : null\r\n      }\r\n    </SummaryContainer>\r\n  );\r\n}\r\n\r\nconst WinLossText = styled.span`\r\n  color: ${props => props.type === \"W\" ? colors.s2Col3 : colors.pCol0}\r\n  font-size: 1.06rem;\r\n`;\r\n\r\nconst FighterName = styled.div`\r\n  margin: auto .4rem;\r\n`;\r\n\r\nconst VSContainer = styled.div`\r\n  width: 1rem;\r\n  margin: auto .1rem;\r\n  /* margin: auto; */\r\n`;\r\n\r\nconst FighterNames = styled.div`\r\n  font-weight: bold;\r\n  width: 15rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.direction === \"left\" ? \"flex-end\": \"flex-start\"};\r\n`;\r\n\r\nconst FightersContainer = styled.div`\r\n  font-size: 1.03rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-decoration: ${props => props.canceled ? 'line-through' : null};\r\n`;\r\n\r\nconst UserPickedFighter = styled.div`\r\n  padding: .3rem;\r\n  border: 1px solid grey;\r\n  border-radius: 3px;\r\n  margin-bottom: .3rem;\r\n  background-color: ${props => !props.winner ? '#7A7A7A' : props.winner === props.predictedFighter ? colors.s2Col4 : colors.pCol0};\r\n`;\r\n\r\nconst TotalVotesText = styled.div`\r\n  margin: auto .3rem;\r\n`;\r\n\r\nconst DropdownContainer = styled.span`\r\n  margin: auto .5rem auto auto;\r\n`;\r\n\r\nconst VoteBarContainer = styled.div`\r\n  width: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.direction === \"left\" ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nconst VoteCountBar = styled.span`\r\n  display: inline-block;\r\n  margin: auto 2px;\r\n  height: 4px;\r\n  width: ${props => `${props.percent / 25}rem`};\r\n  background-color: ${props => props.moreThan ? colors.pCol2 : colors.s2Col2};\r\n  border-radius: ${props => props.direction === \"left\" ? '2px 0 0 2px' : '0 2px 2px 0'};\r\n`;\r\n\r\nconst VoteDisplay = styled.div`\r\n  display: flex;\r\n  font-size: .9rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MobileDisappear = styled.span`\r\n  margin: auto 2px;\r\n  @media(max-width: 576px) {\r\n    display: none;\r\n  };\r\n`;\r\n\r\nconst VoteContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: .5rem auto;\r\n`;\r\n\r\nconst WeightClass = styled.div`\r\n  font-size: .85rem;\r\n  text-decoration: ${props => props.canceled ? 'line-through' : null};\r\n`;\r\n\r\nconst SummaryContainer = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  border: 1px solid #4d4d4d;\r\n  box-shadow: 2px 2px 3px #7A7A7A;\r\n  margin: .2rem 0;\r\n  padding: .3rem .7rem;\r\n  @media(max-width: 767px) {\r\n    font-size: .95em;\r\n  }\r\n  overflow: ${props => props.statsHidden ? null : \"hidden\"}\r\n  max-height: ${props => props.statsHidden ? '400px': '1300px'};\r\n  transition: max-height .5s cubic-bezier(1, 0, 0, 1);\r\n`;\r\n\r\nconst MiniLoading = styled.div`\r\n  border: 3px solid #f3f3f3 !important;\r\n  border-top: 3px solid #3498db !important;\r\n  height: 10px !important;\r\n  width: 10px !important;\r\n  border-radius: 50%;\r\n  margin: auto;\r\n  animation: spin .5s linear infinite;\r\n`;\r\n\r\nPredictOnFighter.propTypes = {\r\n  isDayBefore: PropTypes.bool,\r\n  competitors: PropTypes.array,\r\n  submitPrediction: PropTypes.func,\r\n  fighterOdds: PropTypes.array\r\n};\r\n\r\nSeasonSummaryItem.propTypes = {\r\n  id: PropTypes.string,\r\n  seasonID: PropTypes.string,\r\n  index: PropTypes.number,\r\n  scheduledRounds: PropTypes.number,\r\n  competitors: PropTypes.array,\r\n  summaryOrder: PropTypes.number,\r\n  payout: PropTypes.number,\r\n  canceled: PropTypes.bool,\r\n  weightClass: PropTypes.string,\r\n  isDraw: PropTypes.bool,\r\n  isDayBefore: PropTypes.bool,\r\n  statistics: PropTypes.object,\r\n  winner: PropTypes.string,\r\n  predictionID: PropTypes.number,\r\n  predictedFighter: PropTypes.string,\r\n  seasonDate: PropTypes.object,\r\n  addPredictionHandler: PropTypes.func,\r\n  voteCount: PropTypes.object,\r\n  markets: PropTypes.array,\r\n  plusMinusOdds: PropTypes.func,\r\n  winMethod: PropTypes.string,\r\n  finalRound: PropTypes.number,\r\n  finalRoundTime: PropTypes.string,\r\n  stage: PropTypes.string\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n// import SummaryListItem from './summary-list-item';\r\nimport styled from 'styled-components';\r\nimport { UserContext } from '../context/user-context';\r\nimport LoadingCircle from '../container/loading-circle';\r\nimport SeasonSummaryItem from '../container/season-summary-item';\r\n\r\nconst betAmount = 100;\r\n\r\nconst isCanceled = statusObject => {\r\n  return (!!(statusObject.status === 'closed' && statusObject.match_status === 'cancelled'));\r\n};\r\n\r\nexport default function SeasonPage(props) {\r\n  const { id: seasonID } = props.match.params;\r\n  const [summaries, setSummaries] = useState(null);\r\n  const [summariesCount, setSummariesCount] = useState(null);\r\n  const [isEnded, setIsEnded] = useState(null);\r\n  const possibleStages = ['Main Card', 'Prelims', 'Early Prelims'];\r\n  const { user, setUser } = useContext(UserContext);\r\n  const currentDate = new Date();\r\n\r\n  const cacheDataToLocalStorage = (data, type, id, time) => {\r\n    const lsName = `${type+'-'+id}`;\r\n    window.localStorage.setItem(lsName, JSON.stringify({\r\n      data,\r\n      time\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSeasonData();\r\n  }, []);\r\n\r\n  const getSeasonData = async () => {\r\n    try {\r\n      const localData = JSON.parse(window.localStorage.getItem(`season-${seasonID}`) || null);\r\n      if (localData) {\r\n        if (currentDate - localData.time > 43200) {\r\n          const response = await axios.get(`/api/seasons/${seasonID}`);\r\n          setIsEnded(response.data.isEnded);\r\n          setSummaries(response.data.summaries);\r\n          setSummariesCount(response.data.summariesCount);\r\n          cacheDataToLocalStorage(response.data, 'season', seasonID, currentDate);\r\n        } else {\r\n          setIsEnded(localData.data.isEnded);\r\n          setSummaries(localData.data.summaries);\r\n          setSummariesCount(localData.data.summariesCount);\r\n        }\r\n      } else {\r\n        const response = await axios.get(`/api/seasons/${seasonID}`);\r\n        setIsEnded(response.data.isEnded);\r\n        setSummaries(response.data.summaries);\r\n        setSummariesCount(response.data.summariesCount);\r\n        cacheDataToLocalStorage(response.data, 'season', seasonID, currentDate);\r\n      }\r\n    }\r\n    catch(err){\r\n      // console.log(Object.keys(err));\r\n      // if (err.response.data.message === \"No data available\")\r\n      setIsEnded(false);\r\n      setSummaries([]);\r\n      setSummariesCount(0);\r\n      console.log(err.response.data.message);\r\n    }\r\n  };\r\n\r\n\r\n  // const seasonDate = summaries && summaries.length ? new Date(summaries[0].sport_event.start_time) : null;\r\n  let seasonDate;\r\n  if (summaries) {\r\n    if (summariesCount && summaries.length) {\r\n      seasonDate = new Date(summaries[0].sport_event.start_time);\r\n    }\r\n    else if (summariesCount && summaries['Main Card']) {\r\n      seasonDate = new Date(summaries['Main Card'][0].sport_event.start_time);\r\n    }\r\n  }\r\n\r\n  const isDayBefore = (seasonDate - currentDate) / 1000 < 86400;\r\n\r\n\r\n  const returnWinnerPercentage = (winner, competitors, outcomes) => {\r\n    // I need the sportEvents competitors, get the index for the predictedCompetitor, get the odds for that fighter\r\n    if (!outcomes) {\r\n      return 50;\r\n    }\r\n    let winnerIndex;\r\n    competitors.forEach((c, i) => {\r\n      if (c.id === winner) {\r\n        winnerIndex = i;\r\n      }\r\n    });\r\n    // so i have 0 or 1\r\n    return outcomes[winnerIndex].probability;\r\n  };\r\n\r\n  const returnFighterWinnings = (bet, winner, competitors, outcomes) => {\r\n    if (!winner) {\r\n      return null;\r\n    }\r\n    const winnerPercentage = returnWinnerPercentage(winner, competitors, outcomes);\r\n    const payout =  calculateWinnings(winnerPercentage);\r\n    return payout;\r\n  };\r\n\r\n  const calculateWinnings = percentage => {\r\n    // configure logic to calculate payout for betting on a particular percentage odds thing\r\n    const odds = plusMinusOdds(percentage);\r\n    const payout = odds >= 0 ? betAmount * (odds / 100) + betAmount : betAmount / ((-1 * odds) / 100) + betAmount;\r\n    return payout;\r\n  };\r\n\r\n  const percentToOdds = percentage => {\r\n    const odds = percentage >= 50 ? (-(percentage) / (100 - percentage) * 100).toFixed(0) : (((100 - percentage) / percentage) * 100).toFixed(0);\r\n    return odds;\r\n  };\r\n\r\n  const plusMinusOdds = percentage => {\r\n    const odds = percentToOdds(percentage);\r\n    return odds > 0 ? `+${odds}` : odds;\r\n  };\r\n\r\n  const createVenueLocation = venue => {\r\n    if (!venue) {\r\n      return null;\r\n    }\r\n    const venueString = `${venue.name}`;\r\n    //  - ${venue.city_name}, ${venue.country_name}`;\r\n    return venueString;\r\n  };\r\n\r\n  const addPredictionHandler = (index, predictionID, fighterID, stage) => {\r\n    let voteCount;\r\n    if (stage) {\r\n      const {votecount} = summaries[stage][index];\r\n      voteCount = votecount;\r\n    } else {\r\n      const { votecount } = summaries[index];\r\n      voteCount = votecount;\r\n    }\r\n    if (!voteCount || !voteCount[fighterID]) {\r\n      voteCount = {\r\n        ...voteCount,\r\n        [fighterID]: 0\r\n      };\r\n    }\r\n    voteCount[fighterID] += 1;\r\n    let newSummaries;\r\n    if (stage) {\r\n      newSummaries = update(summaries, {\r\n        [stage]: {\r\n          [index]: {\r\n            prediction_id: { $set: predictionID },\r\n            predicted_fighter: { $set: fighterID },\r\n            votecount: { $set: voteCount }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      newSummaries = update(summaries, {\r\n        [index]: {\r\n          prediction_id: { $set: predictionID },\r\n          predicted_fighter: { $set: fighterID },\r\n          votecount: { $set: voteCount }\r\n        }\r\n      });\r\n    }\r\n    setSummaries(newSummaries);\r\n  };\r\n\r\n  if (!summaries) {\r\n    return <LoadingCircle />;\r\n  }\r\n\r\n  if (summariesCount === 0) {\r\n    return (\r\n      <SummariesContainer>\r\n        No fights to display\r\n      </SummariesContainer>\r\n    );\r\n  }\r\n\r\n  if (summariesCount) {\r\n    if (summaries.length) {\r\n      return (\r\n        <SummariesContainer>\r\n          <SeasonTitle>\r\n            {summaries[0].sport_event.sport_event_context.season.name.replace(/\\d{4}\\s*$/, '')}\r\n            {user && user.userID === 35 ? (\r\n              <EditButton>\r\n                <Link to={`/edit/${seasonID}`}>\r\n                  Edit\r\n                </Link>\r\n              </EditButton>\r\n            ) : (null)}\r\n          </SeasonTitle>\r\n          <div>{summaries[0].sport_event.venue ? summaries[0].sport_event.venue.country_name : null}</div>\r\n          <ArenaName>{createVenueLocation(summaries[0].sport_event.venue)}</ArenaName>\r\n          <div>{moment(summaries[0].sport_event.start_time).format('hh:mm A MMM Do, YYYY')}</div>\r\n          {isEnded && user ? <UsersVotesResults summaries={summaries} isCanceled={isCanceled} /> : null}\r\n          <TotalPredictions returnFighterWinnings={returnFighterWinnings} isEnded={isEnded} summariesArray={summaries} />\r\n          <Divider />\r\n          {summaries.map((s, i) => {\r\n            const outcomes = s.markets ? s.markets[0].outcomes : null;\r\n            return (\r\n              <SeasonSummaryItem\r\n                key={s.id}\r\n                {...props}\r\n                id={s.id}\r\n                index={i}\r\n                seasonID={seasonID}\r\n                betAmount={betAmount}\r\n                competitors={s.sport_event.competitors}\r\n                payout={returnFighterWinnings(betAmount, s.sport_event_status.winner_id, s.sport_event.competitors, outcomes)}\r\n                summaryOrder={s.s_order}\r\n                scheduledRounds={s.sport_event_status.scheduled_length}\r\n                canceled={isCanceled(s.sport_event_status)}\r\n                weightClass={s.sport_event_status.weight_class}\r\n                isDraw={s.sport_event_status.winner === 'draw'}\r\n                winner={s.sport_event_status.winner_id || null}\r\n                isDayBefore={isDayBefore}\r\n                predictionID={s.prediction_id}\r\n                predictedFighter={s.predicted_fighter}\r\n                addPredictionHandler={addPredictionHandler}\r\n                voteCount={s.votecount}\r\n                markets={s.markets}\r\n                plusMinusOdds={plusMinusOdds}\r\n                winMethod={s.sport_event_status.method}\r\n                finalRound={s.sport_event_status.final_round}\r\n                finalRoundTime={s.sport_event_status.final_round_length}\r\n              />\r\n            );\r\n          })\r\n          }\r\n        </SummariesContainer>\r\n      );\r\n    }\r\n    const flattenedObjectSummaries = Object.values(summaries).reduce((a, b) => [...a, ...b]);\r\n    const firstFight = flattenedObjectSummaries[0];\r\n    // console.log(Object.values(summaries));\r\n    return (\r\n      <SummariesContainer>\r\n        <SeasonTitle>\r\n          {firstFight.sport_event.sport_event_context.season.name.replace(/\\d{4}\\s*$/, '')}\r\n          {user && user.userID === 35 ? (\r\n            <EditButton>\r\n              <Link to={`/edit/${seasonID}`}>\r\n                  Edit\r\n              </Link>\r\n            </EditButton>\r\n          ) : (null)}\r\n        </SeasonTitle>\r\n        <div>{firstFight.sport_event.venue ? firstFight.sport_event.venue.country_name : null}</div>\r\n        <ArenaName>{createVenueLocation(firstFight.sport_event.venue)}</ArenaName>\r\n        <div>{moment(firstFight.sport_event.start_time).format('hh:mm A MMM Do, YYYY')}</div>\r\n        <TotalPredictions returnFighterWinnings={returnFighterWinnings} isEnded={isEnded} summariesArray={flattenedObjectSummaries} />\r\n        <Divider />\r\n        {\r\n          possibleStages.map((stage, i) => {\r\n            if (summaries[stage]) {\r\n              return (\r\n                <div key={`${stage}-i`}>\r\n                  <StageText>\r\n                    {stage.toUpperCase()}\r\n                  </StageText>\r\n                  {\r\n                    summaries[stage].map((s, i) => {\r\n                      const outcomes = s.markets ? s.markets[0].outcomes : null;\r\n                      return (\r\n                        <SeasonSummaryItem\r\n                          key={s.id}\r\n                          {...props}\r\n                          id={s.id}\r\n                          index={i}\r\n                          stage={stage}\r\n                          betAmount={betAmount}\r\n                          seasonID={seasonID}\r\n                          scheduledRounds={s.sport_event_status.scheduled_length}\r\n                          competitors={s.sport_event.competitors}\r\n                          summaryOrder={s.s_order}\r\n                          payout={returnFighterWinnings(betAmount, s.sport_event_status.winner_id, s.sport_event.competitors, outcomes)}\r\n                          canceled={isCanceled(s.sport_event_status)}\r\n                          weightClass={s.sport_event_status.weight_class}\r\n                          isDraw={s.sport_event_status.winner === 'draw'}\r\n                          winner={s.sport_event_status.winner_id || null}\r\n                          isDayBefore={isDayBefore}\r\n                          predictionID={s.prediction_id}\r\n                          predictedFighter={s.predicted_fighter}\r\n                          addPredictionHandler={addPredictionHandler}\r\n                          voteCount={s.votecount}\r\n                          statistics={s.statistics}\r\n                          markets={s.markets}\r\n                          plusMinusOdds={plusMinusOdds}\r\n                          winMethod={s.sport_event_status.method}\r\n                          finalRound={s.sport_event_status.final_round}\r\n                          finalRoundTime={s.sport_event_status.final_round_length}\r\n                        />\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n              );\r\n            }\r\n          })\r\n        }\r\n      </SummariesContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SummariesContainer>\r\n      Nothing to show here\r\n    </SummariesContainer>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nconst TotalPredictions = ({ summariesArray, isEnded, returnFighterWinnings }) => {\r\n  const iteratePredictions = (summArray) => {\r\n    const stats = {\r\n      correctPredictions: 0,\r\n      totalPredictions: 0,\r\n      totalFights: 0,\r\n      winningAmount: 0,\r\n      totalMoneyIn: 0\r\n    };\r\n    for (let fight of summArray) {\r\n      // if (fight.predictedFighter)\r\n      if (isCanceled(fight.sport_event_status)) {\r\n        continue;\r\n      }\r\n      if (fight.predicted_fighter) {\r\n        stats.totalPredictions += 1;\r\n        stats.totalMoneyIn += betAmount;\r\n        if (fight.predicted_fighter === fight.sport_event_status.winner_id) {\r\n          stats.correctPredictions += 1;\r\n          const outcomes = fight.markets ? fight.markets[0].outcomes : null;\r\n          stats.winningAmount += returnFighterWinnings(betAmount, fight.sport_event_status.winner_id, fight.sport_event.competitors, outcomes);\r\n        }\r\n      }\r\n      stats.totalFights += 1;\r\n    }\r\n    return {\r\n      ...stats,\r\n      winningAmount: stats.winningAmount.toFixed(2)\r\n    };\r\n  };\r\n\r\n  const stats = iteratePredictions(summariesArray);\r\n\r\n  if (!isEnded) {\r\n    return (\r\n      <div>\r\n        <Divider />\r\n        <OddsResultsContainer>\r\n          Predicted on {stats.totalPredictions || 0}/{stats.totalFights || 0} fights\r\n        </OddsResultsContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!stats.totalPredictions) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Divider />\r\n      <OddsResultsContainer>\r\n        On {stats.correctPredictions || 0}/{stats.totalPredictions || 0} predictions ({stats.totalFights ||0} total fights) your purse at the end\r\n        of the night is ${stats.winningAmount} from ${stats.totalMoneyIn} put in.\r\n      </OddsResultsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UsersVotesResults = (props) => {\r\n  let nonCanceledFightLength = 0;\r\n  let correctPredictions = 0;\r\n  let totalPredictions = 0;\r\n  props.summaries.forEach(sum => {\r\n    if (!props.isCanceled(sum.sport_event_status)){\r\n      nonCanceledFightLength += 1;\r\n      if (sum.prediction_id) {\r\n        totalPredictions += 1;\r\n        const realWinnerID = sum.sport_event_status.winner_id;\r\n        if (realWinnerID && sum.predicted_fighter === realWinnerID){\r\n          correctPredictions += 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <div>\r\n      <Divider style={{maxWidth: '300px', margin: '2px auto'}}/>\r\n      <div>Your Prediction Results</div>\r\n      {correctPredictions}/{totalPredictions} on your predictions <span> out of {nonCanceledFightLength} fights</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StageText = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst ArenaName = styled.div`\r\n  font-style: italic;\r\n`;\r\n\r\nconst OddsResultsContainer = styled.div`\r\n  font-size: .92em;\r\n`;\r\n\r\nconst EditButton = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 0;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  border-bottom: 2px solid grey;\r\n  width: 85%;\r\n  margin: .3rem auto;\r\n`;\r\n\r\nconst SeasonTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  position: relative;\r\n`;\r\n\r\nconst SummariesContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  max-width: 576px;\r\n  padding: .5rem;\r\n`;\r\n","import React, { useState, useContext } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../context/user-context';\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport default function Header(props) {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <Link to=\"/\">\r\n        <LogoAndText>\r\n          <LogoContainer />\r\n          <div>Guesser</div>\r\n        </LogoAndText>\r\n      </Link>\r\n      <LogoAndText>\r\n        {user ? (\r\n          <Link to=\"/account\">\r\n            Account\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/login\">\r\n            <div>Login</div>\r\n          </Link>\r\n        )}\r\n        <DownArrow onClick={toggleMenu}>\r\n          <i className=\"fas fa-sort-down\" />\r\n        </DownArrow>\r\n        <AccountMenu menuVisible={menuVisible}>\r\n          {user ? (\r\n            <Link to=\"/\" onClick={() => {\r\n              window.localStorage.removeItem('userData');\r\n              cookies.remove('token');\r\n              setUser(null);\r\n            }}>\r\n              Signout\r\n            </Link>\r\n          ) : (\r\n            <Link to=\"/signup\" style={{ marginLeft: '1rem' }}>\r\n              <div>Signup</div>\r\n            </Link>\r\n          )}\r\n        </AccountMenu>\r\n      </LogoAndText>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nconst LogoAndText = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  background-color: black;\r\n  color: white;\r\n  padding: .5rem 2rem .5rem 1rem;\r\n  display: flex;\r\n  height: 4rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  display: flex;\r\n`;\r\n\r\nconst DownArrow = styled.i`\r\n  margin: 0 0 10px 5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  padding: 3px;\r\n  background-color: black;\r\n  transition: all ease .5s;\r\n  /* :hover {\r\n    background-color: white;\r\n  } */\r\n`;\r\n\r\nconst AccountMenu = styled.div`\r\n  display: ${props => props.menuVisible ? 'flex' : 'none'};\r\n  position: absolute;\r\n  flex-direction: column;\r\n  color: black;\r\n  background-color: #DCDCDC;\r\n  margin-top: 4rem;\r\n  margin-right: .5rem;\r\n  z-index: 2;\r\n  padding: .5rem;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 8rem;\r\n  height: 6.5rem;\r\n  background-image: url(\"assets/ufc-logo.svg\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n`;\r\n","import React, { useState, useContext } from 'react';\r\nimport * as yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { UserContext } from '../context/user-context';\r\n\r\nfunction equalTo(ref, msg) {\r\n  return yup.mixed().test({\r\n    name: 'equalTo',\r\n    exclusive: false,\r\n    message: msg,\r\n    params: {\r\n      reference: ref.path\r\n    },\r\n    test: function (value) {\r\n      return value === this.resolve(ref);\r\n    }\r\n  });\r\n}\r\nyup.addMethod(yup.string, 'equalTo', equalTo);\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().min(6, 'Username must be at least 6 characters long').max(32, 'Username limited to 32 characters').required('Username Required'),\r\n  password: yup.string().min(8, 'Password must be at least 6 characters long').max(32, 'Password limited to 32 characters')\r\n    .matches(/\\d/, 'One digit required').matches(/[A-Z]/, 'One capital letter required').matches(/[a-z]/, 'One lowercase letter required').required('Password Required'),\r\n  confirmPassword: yup.string().equalTo(yup.ref('password'), 'Passwords must match')\r\n});\r\n\r\nexport default function SignUp(props) {\r\n  const [usernameTaken, setUsernameTaken] = useState(false);\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  const submitUserData = async values => {\r\n    try {\r\n      const userSignupResponse = await axios.post('/api/users/signup', { ...values });\r\n      if (userSignupResponse.data.success) {\r\n        const { userID, username } = userSignupResponse.data;\r\n        const userData = {\r\n          userID,\r\n          username\r\n        };\r\n        window.localStorage.setItem('userData', JSON.stringify(userData));\r\n        setUser(userData);\r\n        props.history.push('/');\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.data.error === 'duplicate_username') {\r\n        setUsernameTaken(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <h2>Sign Up</h2>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        }}\r\n        validationSchema={validationSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={values => {\r\n          setUsernameTaken(false);\r\n          submitUserData(values);\r\n        }}\r\n      >\r\n        <FormContainer onChange={() => { setUsernameTaken(false); }}>\r\n          <InputContainer>\r\n            <InputField name=\"username\" placeholder=\"username\" />\r\n            <UsernameUnavailableError error={usernameTaken}>\r\n              Username unavailable\r\n            </UsernameUnavailableError>\r\n            <ErrorOutput name=\"username\" component=\"div\"/>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <InputField name=\"password\" placeholder=\"********\" type=\"password\"/>\r\n            <ErrorOutput name=\"password\" component=\"div\" />\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <InputField name=\"confirmPassword\" placeholder=\"********\" type=\"password\" />\r\n            <ErrorOutput name=\"confirmPassword\" component=\"div\" />\r\n          </InputContainer>\r\n          <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n        </FormContainer>\r\n      </Formik>\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nconst SubmitButton = styled.button`\r\n  padding: .3rem;\r\n  border-radius: 7px;\r\n  position: absolute;\r\n  left: 0;\r\n`;\r\n\r\nconst InputField = styled(Field)`\r\n  width: 95%;\r\n  padding: .5rem;\r\n  border-radius: 7px;\r\n  &:focus {\r\n    border: 2px groove blue;\r\n  }\r\n`;\r\n\r\nconst UsernameUnavailableError = styled.div`\r\n  display: ${props => props.error ? 'block' : 'none'}\r\n  position: absolute;\r\n  bottom: -1rem;\r\n  font-size: .8em;\r\n  color: red;\r\n`;\r\n\r\nconst ErrorOutput = styled(ErrorMessage)`\r\n  position: absolute;\r\n  bottom: -1rem;\r\n  font-size: .8em;\r\n  color: red;\r\n`;\r\n\r\nconst FormContainer = styled(Form)`\r\n  width: 80%;\r\n  max-width: 25rem;\r\n  position: relative;\r\n  margin: auto;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  position: relative;\r\n  margin: .5rem auto 1.5rem auto;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  border-bottom: 2px solid grey;\r\n  width: 85%;\r\n  margin: .3rem auto;\r\n`;\r\n\r\nconst SignUpContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  max-width: 768px;\r\n  padding: .5rem;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst convertName = name => {\r\n  const split = name.split(', ');\r\n  return [split[1], split[0]].join(' ');\r\n};\r\n\r\nexport default function SummaryPredictions(props){\r\n  return (\r\n    <SummaryContainer>\r\n      <FighterNames>\r\n        <FighterOne winner={props.winner} competitorID={props.competitors[0].id} predictedFighter={props.predictedFighter}>\r\n          {convertName(props.competitors[0].name)}\r\n        </FighterOne>\r\n        <Middle> - </Middle>\r\n        <FighterTwo winner={props.winner} competitorID={props.competitors[1].id} predictedFighter={props.predictedFighter}>\r\n          {convertName(props.competitors[1].name)}\r\n        </FighterTwo>\r\n      </FighterNames>\r\n    </SummaryContainer>\r\n  );\r\n}\r\n\r\nconst Middle = styled.div`\r\n  width: 5%;\r\n`;\r\n\r\nconst Fighter = styled.div`\r\n  border: ${props => props.winner ? props.winner === props.competitorID ? ' 1px solid #498a77;' : '1px solid #bd6574' : 'none'};\r\n  color: ${props => props.predictedFighter === props.competitorID ? '#498a77;' : '#bd6574'};\r\n  width: 47.5%;\r\n  padding: .2rem;\r\n`;\r\n\r\nconst FighterOne = styled(Fighter)`\r\n  text-align: start;\r\n`;\r\n\r\nconst FighterTwo = styled(Fighter)`\r\n  text-align: end;\r\n`;\r\n\r\nconst FighterNames = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst SummaryContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin: .2rem auto;\r\n  @media(max-width: 767px) {\r\n    font-size: .95em;\r\n  }\r\n`;\r\n\r\nSummaryPredictions.propTypes = {\r\n  competitors: PropTypes.array,\r\n  predictedFighter: PropTypes.string,\r\n  winner: PropTypes.string\r\n};\r\n","import React, {useState} from 'react';\r\nimport SummaryPredictions from './summary-predictions';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function AccountsSummaries(props) {\r\n  const GeneratePredictionTotals = innerProps => {\r\n    let correct = 0;\r\n    let total = 0;\r\n    if (innerProps.eventsArray) {\r\n      innerProps.eventsArray.forEach(e => {\r\n        if (e.predictedFighter === e.sportEventStatus.winner_id) {\r\n          correct += 1;\r\n        }\r\n        total += 1;\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {correct}/{total}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SeasonsContainer>\r\n      <SeasonName>\r\n        <Link to={`/season/${props.id}`}>\r\n          {props.name}\r\n        </Link>\r\n      </SeasonName>\r\n      <GeneratePredictionTotals eventsArray={props.eventsArray}/>\r\n      {props.eventsArray ? (\r\n        props.eventsArray.map(p => {\r\n          return (\r\n            <SummaryPredictions\r\n              key={p.summaryID}\r\n              competitors={p.sportEvent.competitors}\r\n              predictedFighter={p.predictedFighter}\r\n              winner={p.sportEventStatus.winner_id}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        null\r\n      )}\r\n    </SeasonsContainer>\r\n  );\r\n}\r\n\r\nconst SeasonName = styled.div`\r\n  font-weight: bold;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst SeasonsContainer = styled.div`\r\n`;\r\n\r\nAccountsSummaries.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  startDate: PropTypes.string,\r\n  eventsArray: PropTypes.array\r\n};\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport {UserContext} from '../context/user-context';\r\nimport LoadingCircle from '../container/loading-circle';\r\nimport AccountsSummaries from '../container/accounts-summaries';\r\n\r\nexport default function AccountPage(props){\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [predictionData, setPredictionData] = useState(false);\r\n  const betAmount = 10;\r\n\r\n  const accuracyText = (percentage) => {\r\n    if (percentage < .25){\r\n      return `I definitely wouldn't bet with an accuracy of ${percentage*100}%`;\r\n    }\r\n    if (percentage < .5){\r\n      return `You could try your luck with a ${percentage*100}% accuracy`;\r\n    }\r\n    if (percentage < .75){\r\n      return `Not bad try your luck you're doing ${percentage*100}%`;\r\n    }\r\n    else {\r\n      return `Sell the house. Go to Vegas and good luck: ${percentage*100}%`;\r\n    }\r\n  };\r\n\r\n  const returnWinnerPercentage = (winner, competitors, outcomes) => {\r\n    // I need the sportEvents competitors, get the index for the predictedCompetitor, get the odds for that fighter\r\n    if (!outcomes) {\r\n      return 50;\r\n    }\r\n    let winnerIndex;\r\n    competitors.forEach((c, i) => {\r\n      if (c.id === winner) {\r\n        winnerIndex = i;\r\n      }\r\n    });\r\n    // so i have 0 or 1\r\n    return outcomes[winnerIndex].probability;\r\n  };\r\n\r\n  const percentToOdds = percentage => {\r\n    const odds = percentage >= 50 ? (-(percentage) / (100 - percentage) * 100).toFixed(0) : (((100 - percentage) / percentage) * 100).toFixed(0);\r\n    return odds;\r\n  };\r\n\r\n  const plusMinusOdds = percentage => {\r\n    const odds = percentToOdds(percentage);\r\n    return odds > 0 ? `+${odds}` : odds;\r\n  };\r\n\r\n  const calculateWinnings = percentage => {\r\n    // configure logic to calculate payout for betting on a particular percentage odds thing\r\n    const odds = plusMinusOdds(percentage);\r\n    const payout = odds >= 0 ? betAmount * (odds / 100) + betAmount : betAmount / ((-1*odds)/100) + betAmount;\r\n    return payout;\r\n  };\r\n\r\n  const TotalPredictions = ({seasonsArray}) => {\r\n    let correct = 0;\r\n    let passedFights = 0;\r\n    let winnings = 0;\r\n    let inputMoney = 0;\r\n    for (let i = 0; i < seasonsArray.length; i++){\r\n      if (!seasonsArray[i].seasonsummaries){\r\n        continue;\r\n      }\r\n      if (!seasonsArray[[i]].seasonsummaries[0].sportEventStatus.winner){\r\n        continue;\r\n      }\r\n      const seasonSummaries = seasonsArray[i].seasonsummaries;\r\n      for (let j in seasonSummaries){\r\n        if (seasonSummaries[j].predictedFighter === seasonSummaries[j].sportEventStatus.winner_id){\r\n          // this is the winning conditional, if you win, find the winners probabilities in outcome.\r\n          const {outcomes} = seasonSummaries[j].markets ? seasonSummaries[j].markets[0] : null;\r\n          const predictedPercentage = returnWinnerPercentage(seasonSummaries[j].sportEventStatus.winner_id, seasonSummaries[j].sportEvent.competitors , outcomes);\r\n          const payout = calculateWinnings(predictedPercentage);\r\n          winnings += payout;\r\n          correct += 1;\r\n        }\r\n        passedFights += 1;\r\n        inputMoney += betAmount;\r\n      }\r\n    }\r\n    const percentageChange = (winnings * 100 / inputMoney).toFixed(2);\r\n    return (\r\n      <div>\r\n        <div>\r\n          {correct}/{passedFights} so far\r\n        </div>\r\n        <div>\r\n          ${inputMoney} in, ${winnings.toFixed(2)} in yo pocket\r\n        </div>\r\n        <div>\r\n          Good for {percentageChange}% of initial earnings\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserPredictions();\r\n  }, []);\r\n\r\n  const fetchUserPredictions = async () => {\r\n    try {\r\n      const predictionResponse = await axios.get(`/api/users/${user.userID}`);\r\n      setPredictionData(predictionResponse.data.seasons);\r\n    }\r\n    catch(err) {\r\n      setPredictionData([]);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return user && predictionData  ? (\r\n    <AccountContainer>\r\n      <AccountTitle>\r\n        Account\r\n      </AccountTitle>\r\n      <TotalPredictions seasonsArray={predictionData}/>\r\n      {\r\n        predictionData.length ? (\r\n          predictionData.map(s => {\r\n            return (\r\n              <AccountsSummaries\r\n                key={s.id}\r\n                id={s.id}\r\n                name={s.name}\r\n                startDate={s.start_date}\r\n                eventsArray={s.seasonsummaries}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            Make predictions for some data\r\n          </div>\r\n        )\r\n      }\r\n    </AccountContainer>\r\n  ) : <LoadingCircle />;\r\n}\r\n\r\n\r\nconst AccountContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  max-width: 768px;\r\n  padding: .5rem;\r\n`;\r\n\r\nconst AccountTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  position: relative;\r\n`;\r\n","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/user-context';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required('* Required'),\r\n  password: yup.string().required('* Required')\r\n});\r\n\r\nexport default function Login(props) {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n\r\n  const submitLogin = async values => {\r\n    try {\r\n      const loginResponse = await axios.post('/api/users/login', values);\r\n      const userData = {\r\n        userID: loginResponse.data.userID,\r\n        username: loginResponse.data.username\r\n      };\r\n      window.localStorage.setItem('userData', JSON.stringify(userData));\r\n      setUser(userData);\r\n      props.history.push('/');\r\n    } catch (err) {\r\n      if (err.response && err.response.data.error === 'failed_credentials') {\r\n        setLoginFailed(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <h2>Login</h2>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          password: ''\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={submitLogin}\r\n      >\r\n        <FormContainer onChange={() => { setLoginFailed(false); }}>\r\n          <InputContainer>\r\n            <InputField name=\"username\" placeholder=\"username\" />\r\n            <ErrorOutput name=\"username\" component=\"div\" />\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <InputField name=\"password\" placeholder=\"password\" type=\"password\" />\r\n            <ErrorOutput name=\"password\" component=\"div\" />\r\n            <LoginFailError error={loginFailed}>Login Failed</LoginFailError>\r\n          </InputContainer>\r\n          <SubmitButton type=\"submit\">\r\n              Submit\r\n          </SubmitButton>\r\n        </FormContainer>\r\n      </Formik>\r\n    </LoginContainer>\r\n  );\r\n}\r\n\r\nconst SubmitButton = styled.button`\r\n  padding: .3rem;\r\n  border-radius: 7px;\r\n  position: absolute;\r\n  left: 0;\r\n`;\r\n\r\nconst InputField = styled(Field)`\r\n  width: 95%;\r\n  padding: .5rem;\r\n  border-radius: 7px;\r\n  &:focus {\r\n    border: 2px groove blue;\r\n  }\r\n`;\r\n\r\nconst LoginFailError = styled.div`\r\n  display: ${props => props.error ? 'block' : 'none'}\r\n  position: absolute;\r\n  bottom: -1rem;\r\n  font-size: .8em;\r\n  color: red;\r\n`;\r\n\r\nconst ErrorOutput = styled(ErrorMessage)`\r\n  position: absolute;\r\n  bottom: -1rem;\r\n  font-size: .8em;\r\n  color: red;\r\n`;\r\n\r\nconst FormContainer = styled(Form)`\r\n  width: 80%;\r\n  max-width: 25rem;\r\n  position: relative;\r\n  margin: auto;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  position: relative;\r\n  margin: .5rem auto 1.5rem auto;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  border-bottom: 2px solid grey;\r\n  width: 85%;\r\n  margin: .3rem auto;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  max-width: 768px;\r\n  padding: .5rem;\r\n`;\r\n","/* eslint-disable react/display-name */\r\nimport React, { useImperativeHandle, useRef } from 'react';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport styled from 'styled-components';\r\n\r\nconst ItemTypes = {\r\n  SUMMARY: 'summary'\r\n};\r\n\r\nconst Middle = styled.div`\r\n  width: 10%;\r\n  margin: auto;\r\n`;\r\n\r\nconst Fighter = styled.div`\r\n  width: 45%\r\n  display: flex;\r\n`;\r\n\r\nconst FighterOne = styled(Fighter)`\r\n  justify-content: start;\r\n`;\r\n\r\nconst FighterTwo = styled(Fighter)`\r\n  justify-content: end;\r\n`;\r\n\r\nconst SummaryContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: .3rem .7rem;\r\n  text-decoration: ${props => props.canceled ? 'line-through' : null};\r\n  @media(max-width: 767px) {\r\n    font-size: .95em;\r\n  }\r\n`;\r\n\r\nconst CanceledCheck = styled.input`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst style = {\r\n  border: '1px dashed gray',\r\n  padding: '0.5rem 1rem',\r\n  marginBottom: '.5rem',\r\n  backgroundColor: 'white',\r\n  cursor: 'move'\r\n};\r\n\r\nconst convertName = name => {\r\n  const split = name.split(', ');\r\n  return [split[1], split[0]].join(' ');\r\n};\r\n\r\nconst SummaryDragItem = React.forwardRef(\r\n  ({ index, canceled, editFightCancel, competitors, isDragging, connectDragSource, connectDropTarget }, ref) => {\r\n    const elementRef = useRef(null);\r\n    connectDragSource(elementRef);\r\n    connectDropTarget(elementRef);\r\n    const opacity = isDragging ? 0 : 1;\r\n    useImperativeHandle(ref, () => ({\r\n      getNode: () => elementRef.current\r\n    }));\r\n    const editHandle = () => {\r\n      editFightCancel(index, canceled);\r\n    };\r\n    return (\r\n      <SummaryContainer canceled={canceled} ref={elementRef} style={{ ...style, opacity }}>\r\n        <CanceledCheck onChange={editHandle} type=\"checkbox\" checked={canceled} />\r\n        <FighterOne>{convertName(competitors[0].name)}</FighterOne>\r\n        <Middle>vs</Middle>\r\n        <FighterTwo>{convertName(competitors[1].name)}</FighterTwo>\r\n      </SummaryContainer>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DropTarget(\r\n  ItemTypes.SUMMARY,\r\n  {\r\n    hover(props, monitor, component) {\r\n      if (!component) {\r\n        return null;\r\n      }\r\n      // node = HTML Div element from imperative API\r\n      const node = component.getNode();\r\n      if (!node) {\r\n        return null;\r\n      }\r\n      const dragIndex = monitor.getItem().index;\r\n      const hoverIndex = props.index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = node.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Time to actually perform the action\r\n      props.moveCard(dragIndex, hoverIndex);\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      monitor.getItem().index = hoverIndex;\r\n    }\r\n  },\r\n  connect => ({\r\n    connectDropTarget: connect.dropTarget()\r\n  })\r\n)(\r\n  DragSource(\r\n    ItemTypes.SUMMARY,\r\n    {\r\n      beginDrag: props => ({\r\n        id: props.id,\r\n        index: props.index\r\n      })\r\n    },\r\n    (connect, monitor) => ({\r\n      connectDragSource: connect.dragSource(),\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  )(SummaryDragItem)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport styled from 'styled-components';\r\nimport update from 'immutability-helper';\r\nimport SummaryDragItem from '../container/summary-drag-item';\r\n\r\nconst EditSummaries = props => {\r\n  {\r\n    const { id: seasonID } = props.match.params;\r\n    const [summaries, setSummaries] = useState(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n      getSeasonData();\r\n    }, []);\r\n\r\n    const handleSubmitChanges = async function () {\r\n      setIsSubmitting(true);\r\n      try {\r\n        const axiosBody = {\r\n          seasonID,\r\n          newOrder: summaries.map((s, i) => ({\r\n            sportEventID: s.id,\r\n            sortOrder: i,\r\n            sportEventStatus: s.sport_event_status\r\n          }))\r\n        };\r\n        const sendOrderData = await axios.post('/api/summaries/reorder', axiosBody);\r\n        if (sendOrderData.data.success) {\r\n          setIsSubmitting(false);\r\n        }\r\n      } catch (err) {\r\n        setIsSubmitting(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const getSeasonData = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/seasons/${seasonID}`);\r\n        if (response.data.summaries && !response.data.summaries.length) {\r\n          return setSummaries(Object.values(response.data.summaries).reduce((a, b) => [...a, ...b]));\r\n        }\r\n        setSummaries(response.data.summaries);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const editFightCancel = (index, currentCancelValue) => {\r\n      if (!currentCancelValue) { // if its false, or not cancelled;\r\n        setSummaries(update(summaries, {\r\n          [index]: {\r\n            sport_event_status: {\r\n              status: { $set: 'closed' },\r\n              match_status: { $set: 'cancelled' }\r\n            }\r\n          }\r\n        }));\r\n      } else { // if the fight is going from cancelled to uncancelled\r\n        const startTime = new Date(summaries[index].sport_event.start_time);\r\n        const nowTime = new Date();\r\n        if (startTime > nowTime) {\r\n          setSummaries(update(summaries, {\r\n            [index]: {\r\n              sport_event_status: {\r\n                status: { $set: 'not_started' },\r\n                match_status: { $set: 'not_started' }\r\n              }\r\n            }\r\n          }));\r\n        } else {\r\n          setSummaries(update(summaries, {\r\n            [index]: {\r\n              sport_event_status: {\r\n                status: { $set: 'closed' },\r\n                match_status: { $set: 'ended' }\r\n              }\r\n            }\r\n          }));\r\n        }\r\n      }\r\n      // if (nowTime > startTime) { // fights that have happened\r\n      // I want to say the\r\n      // }\r\n      // console.log(startTime > nowTime);\r\n    };\r\n\r\n    const moveCard = (dragIndex, hoverIndex) => {\r\n      const dragCard = summaries[dragIndex];\r\n      setSummaries(\r\n        update(summaries, {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, dragCard]\r\n          ]\r\n        })\r\n      );\r\n    };\r\n\r\n    const isCanceled = statusObject => {\r\n      return (!!(statusObject.status === 'closed' && statusObject.match_status === 'cancelled'));\r\n    };\r\n\r\n    return summaries ? (\r\n      <SummariesContainer>\r\n        <div>\r\n          {summaries[0].sport_event.sport_event_context.season.name.replace(/\\d{4}\\s*$/, '')}\r\n        </div>\r\n        <CanceledHeader>\r\n          canceled\r\n        </CanceledHeader>\r\n        <Divider />\r\n        <DndProvider backend={HTML5Backend}>\r\n          <div>\r\n            {summaries.map((s, index) => (\r\n              <SummaryDragItem\r\n                key={s.id}\r\n                id={s.id}\r\n                index={index}\r\n                moveCard={moveCard}\r\n                competitors={s.sport_event.competitors}\r\n                canceled={isCanceled(s.sport_event_status)}\r\n                summaryOrder={s.s_order}\r\n                editFightCancel={editFightCancel}\r\n              />\r\n            ))}\r\n          </div>\r\n        </DndProvider>\r\n        {!isSubmitting ? (\r\n          <SubmitChanges onClick={handleSubmitChanges}>\r\n            Save\r\n          </SubmitChanges>\r\n        ) : <div>saving</div>}\r\n      </SummariesContainer>\r\n    ) : null;\r\n  }\r\n};\r\n\r\nconst SubmitChanges = styled.button`\r\n  padding: .5rem;\r\n`;\r\n\r\nconst CanceledHeader = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: .5rem\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  border-bottom: 2px solid grey;\r\n  width: 85%;\r\n  margin: .3rem auto;\r\n`;\r\n\r\nconst SummariesContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  position: relative;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  max-width: 768px;\r\n  padding: .5rem;\r\n`;\r\n\r\nexport default EditSummaries;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","import React, { useState, useMemo, useContext, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport UpcomingSeasons from './upcoming-seasons';\r\nimport SeasonPage from './season-page';\r\nimport axios from 'axios';\r\nimport Header from '../container/header';\r\nimport SignUp from './signup';\r\nimport AccountPage from './account-page';\r\nimport Login from './login';\r\nimport { UserContext } from '../context/user-context';\r\nimport { ThemeContext} from '../context/theme-context';\r\nimport EditSummaries from './edit-summaries';\r\n\r\nexport default function App(props) {\r\n  const [user, setUser] = useState(JSON.parse(window.localStorage.getItem('userData')) || null);\r\n  const [seasons, setSeasons] = useState(null);\r\n\r\n  const getSeasons = async () => {\r\n    const response = await axios.get('api/seasons');\r\n    setSeasons(response.data.seasons);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSeasons();\r\n  }, []);\r\n\r\n  const userProviderVal = useMemo(() => ({ user, setUser }), [user, setUser]);\r\n\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={userProviderVal}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={props => <UpcomingSeasons {...props} seasons={seasons} />} />\r\n          <Route exact path=\"/season/:id\" render={props => <SeasonPage {...props} />} />\r\n          <Route exact path=\"/edit/:id\" render={props => <EditSummaries {...props} />} />\r\n          <Route exact path=\"/signup\" render={props => <SignUp {...props} />} />\r\n          <Route exact path=\"/account\" render={props => <AccountPage {...props} />} />\r\n          <Route exact path=\"/login\" render={props => <Login {...props} />} />\r\n        </Switch>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}